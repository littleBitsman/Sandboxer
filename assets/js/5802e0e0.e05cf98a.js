"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[130],{732:e=>{e.exports=JSON.parse('{"functions":[{"name":"Init","desc":"Initailizes the sandbox environment for the calling script.\\n\\nThe following globals are **removed**:\\n- `_G` / `shared`\\n- `SharedTable`\\n- `debug` library\\n- `getfenv`\\n- `setfenv`\\n- `loadstring`\\n- `newproxy`\\n- `xpcall` (*note: use `pcall` instead*)\\n\\nAll other globals are set to sandboxed versions of the originals.","params":[],"returns":[],"function_type":"method","source":{"line":189,"path":"src/Sandboxer.luau"}},{"name":"Sandbox","desc":"Sandboxes the given function or the calling script at the specified level.","params":[{"name":"fnOrLevel","desc":"","lua_type":"- The function to sandbox or the level to sandbox at."}],"returns":[],"function_type":"method","errors":[{"lua_type":"If `fnOrLevel` is a number, it must be at least 1.","desc":""}],"source":{"line":209,"path":"src/Sandboxer.luau"}}],"properties":[],"types":[],"name":"Sandboxer","desc":"The main Sandboxer class. This class is intended to be used as follows,\\nwhere the module is placed in ServerScriptService named `Init`:\\n```lua\\nrequire(game:GetService(\\"ServerScriptService\\").Init):Init()\\n```\\nThis would be expected to be the first line of all scripts that are to be sandboxed\\n(not including `--!strict`, `--!optimize`, and other directives).\\n\\nHaving this be the first line guarantees that the script is sandboxed before any other code runs.\\nYou would have to check if it is the first line of code yourself, using external sources with\\nmodules such as [rbx-reader](https://npmjs.org/package/rbx-reader).\\n\\nMore customizability is planned for the future, such as:\\n- Customizing the environment\\n- Customizing allowed Instances\\n- Customizing allowed RBXScriptSignals\\n- Customizing allowed methods","source":{"line":42,"path":"src/Sandboxer.luau"}}')}}]);