"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[960],{9419:e=>{e.exports=JSON.parse('{"functions":[{"name":"instanceAllowed","desc":"Checks if an `Instance` is allowed in the sandbox.","params":[{"name":"inst","desc":"The `Instance` to check.","lua_type":"Instance"}],"returns":[{"desc":"","lua_type":"boolean\\n"}],"function_type":"static","source":{"line":98,"path":"src/InstanceList.lua"}}],"properties":[{"name":"DisallowedClasses","desc":"A list of classes that are not allowed to be created by\\n`Instance.new` nor `Instance.fromExisting`.\\n\\nItems can be added to the list, but it cannot be overwritten.","lua_type":"{string}","readonly":true,"source":{"line":43,"path":"src/InstanceList.lua"}},{"name":"ExplicitDisallow","desc":"A list of `Instance`s that are explicitly disallowed in the sandbox.\\nThis is a mapping of `Instance`s to a boolean value, which indicates whether\\nthe `Instance`\'s descendants are allowed or not.\\n\\nItems can be added to the list, but it cannot be overwritten.","lua_type":"{ [Instance]: boolean }","readonly":true,"source":{"line":60,"path":"src/InstanceList.lua"}},{"name":"Allow","desc":"A list of `Instance`s that are allowed in the sandbox.\\nThis is a mapping of `Instance`s to a boolean value, which indicates whether\\nthe `Instance`\'s descendants are allowed or not.\\n\\nIf any `Instance` is present in this list, but it is disallowed in `ExplicitDisallow`,\\nit will be disallowed in the sandbox.\\n\\nItems can be added to the list, but it cannot be overwritten.","lua_type":"{ [Instance]: boolean }","readonly":true,"source":{"line":89,"path":"src/InstanceList.lua"}}],"types":[],"name":"InstanceList","desc":"A list of `Instance`s that are allowed or disallowed in the sandbox.\\n\\nYou can use this to check if an `Instance` is allowed or disallowed in the sandbox.\\n\\nYou can also use this to check if an `Instance` or `RBXScriptSignal` is wrapped or not.","source":{"line":30,"path":"src/InstanceList.lua"}}')}}]);