{"searchDocs":[{"title":"InstanceConstructors","type":0,"sectionRef":"#","url":"/Sandboxer/api/InstanceConstructors","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"InstanceConstructors","url":"/Sandboxer/api/InstanceConstructors#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"InstanceConstructors","url":"/Sandboxer/api/InstanceConstructors#new","content":"&lt;/&gt; InstanceConstructors.new(...: string | Instance ) → any Returns a new Instance of the given class, wrapping it in a proxy that allows it to be safely used in the sandbox.  ","version":null,"tagName":"h3"},{"title":"fromExisting​","type":1,"pageTitle":"InstanceConstructors","url":"/Sandboxer/api/InstanceConstructors#fromExisting","content":"&lt;/&gt; InstanceConstructors.fromExisting(...: Instance ) → () Returns an Instance which is a copy of an existing Instance. ","version":null,"tagName":"h3"},{"title":"Sandboxer","type":0,"sectionRef":"#","url":"/Sandboxer/api/Sandboxer","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"Sandboxer","url":"/Sandboxer/api/Sandboxer#functions","content":" ","version":null,"tagName":"h2"},{"title":"Init​","type":1,"pageTitle":"Sandboxer","url":"/Sandboxer/api/Sandboxer#Init","content":"&lt;/&gt; Sandboxer:Init() → () Initailizes the sandbox environment for the calling script. The following globals are removed/set to nil: _G / shared SharedTable debug library The following globals are set to a function that throws an error when called: getfenv setfenv loadstring newproxy xpcall (note: use pcall instead) The following globals are set to sandboxed versions of the originals: game / Game workspace / Workspace script require typeof rawget rawset rawequal Instance ","version":null,"tagName":"h3"},{"title":"InstanceList","type":0,"sectionRef":"#","url":"/Sandboxer/api/InstanceList","content":"","keywords":"","version":null},{"title":"Properties​","type":1,"pageTitle":"InstanceList","url":"/Sandboxer/api/InstanceList#properties","content":" ","version":null,"tagName":"h2"},{"title":"DisallowedClasses​","type":1,"pageTitle":"InstanceList","url":"/Sandboxer/api/InstanceList#DisallowedClasses","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; InstanceList.DisallowedClasses: {string} A list of classes that are not allowed to be created byInstance.new nor Instance.fromExisting. Items can be added to the list, but it cannot be overwritten.  ","version":null,"tagName":"h3"},{"title":"ExplicitDisallow​","type":1,"pageTitle":"InstanceList","url":"/Sandboxer/api/InstanceList#ExplicitDisallow","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; InstanceList.ExplicitDisallow: {[Instance ]: boolean} A list of Instances that are explicitly disallowed in the sandbox. This is a mapping of Instances to a boolean value, which indicates whether the Instance's descendants are allowed or not. Items can be added to the list, but it cannot be overwritten.  ","version":null,"tagName":"h3"},{"title":"Allow​","type":1,"pageTitle":"InstanceList","url":"/Sandboxer/api/InstanceList#Allow","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; InstanceList.Allow: {[Instance ]: boolean} A list of Instances that are allowed in the sandbox. This is a mapping of Instances to a boolean value, which indicates whether the Instance's descendants are allowed or not. If any Instance is present in this list, but it is disallowed in ExplicitDisallow, it will be disallowed in the sandbox. Items can be added to the list, but it cannot be overwritten. ","version":null,"tagName":"h3"},{"title":"Functions​","type":1,"pageTitle":"InstanceList","url":"/Sandboxer/api/InstanceList#functions","content":" ","version":null,"tagName":"h2"},{"title":"instanceAllowed​","type":1,"pageTitle":"InstanceList","url":"/Sandboxer/api/InstanceList#instanceAllowed","content":"&lt;/&gt; InstanceList.instanceAllowed( inst: Instance -- The Instance to check. ) → boolean Checks if an Instance is allowed in the sandbox. ","version":null,"tagName":"h3"},{"title":"InstanceSandboxer","type":0,"sectionRef":"#","url":"/Sandboxer/api/InstanceSandboxer","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"InstanceSandboxer","url":"/Sandboxer/api/InstanceSandboxer#functions","content":" ","version":null,"tagName":"h2"},{"title":"deepWrap​","type":1,"pageTitle":"InstanceSandboxer","url":"/Sandboxer/api/InstanceSandboxer#deepWrap","content":"&lt;/&gt; InstanceSandboxer.deepWrap( v: any,-- The value to deeply wrap. instance: Instance? ,-- The Instance if wrapping one of its properties, methods, or events. key: string?,-- The key of the property, method, or event being wrapped, if applicable. pvisited: {[any]: any}? ) → any Deeply wraps v if it is a table, wrapping Instances and RBXScriptSignals as needed. If v is an Instance or RBXScriptSignal, it will be wrapped and returned.  ","version":null,"tagName":"h3"},{"title":"deepUnwrap​","type":1,"pageTitle":"InstanceSandboxer","url":"/Sandboxer/api/InstanceSandboxer#deepUnwrap","content":"&lt;/&gt; InstanceSandboxer.deepUnwrap( v: any,-- The value to deeply unwrap. pvisited: {[any]: any}? ) → any Deeply unwraps v if it is a table, unwrapping Instances and RBXScriptSignals as needed. If v is a wrapped Instance or RBXScriptSignal, it will be unwrapped and returned.  ","version":null,"tagName":"h3"},{"title":"wrapArgs​","type":1,"pageTitle":"InstanceSandboxer","url":"/Sandboxer/api/InstanceSandboxer#wrapArgs","content":"&lt;/&gt; InstanceSandboxer.wrapArgs(...: any) → {any} Deeply wraps all arguments passed to the function, making them ready to be returned to the sandboxed environment.  ","version":null,"tagName":"h3"},{"title":"unwrapArgs​","type":1,"pageTitle":"InstanceSandboxer","url":"/Sandboxer/api/InstanceSandboxer#unwrapArgs","content":"&lt;/&gt; InstanceSandboxer.unwrapArgs(...: any) → {any} Deeply unwraps all arguments passed to the function (usually from inside the sandbox), making them ready to be used in a method call on an Instance.  ","version":null,"tagName":"h3"},{"title":"wrapEvent​","type":1,"pageTitle":"InstanceSandboxer","url":"/Sandboxer/api/InstanceSandboxer#wrapEvent","content":"&lt;/&gt; InstanceSandboxer.wrapEvent( signal: RBXScriptSignal ,-- The RBXScriptSignal to wrap. name: string-- The name of the signal, used for debugging purposes and printing out to console. ) → any-- The wrapped RBXScriptSignal. Wraps an RBXScriptSignal in a proxy that allows it to be safely used in the sandbox. The proxy will have the same methods as an RBXScriptSignal, but will return wrapped arguments when the signal is fired.  ","version":null,"tagName":"h3"},{"title":"wrapInstance​","type":1,"pageTitle":"InstanceSandboxer","url":"/Sandboxer/api/InstanceSandboxer#wrapInstance","content":"&lt;/&gt; InstanceSandboxer.wrapInstance( instance: Instance -- The Instance to wrap. ) → any-- The wrapped Instance. Wraps an Instance in a proxy that allows it to be safely used in the sandbox. The proxy will have the same properties, methods, and events as the Instance, but will return wrapped arguments when accessed.  ","version":null,"tagName":"h3"},{"title":"unwrap​","type":1,"pageTitle":"InstanceSandboxer","url":"/Sandboxer/api/InstanceSandboxer#unwrap","content":"&lt;/&gt; InstanceSandboxer.unwrap( a: any-- The wrapped Instance or RBXScriptSignal to unwrap. ) → (Instance | RBXScriptSignal )? Unwraps a wrapped Instance or RBXScriptSignal. If the Instance or RBXScriptSignal is not wrapped, it will return nil.  ","version":null,"tagName":"h3"},{"title":"isWrapped​","type":1,"pageTitle":"InstanceSandboxer","url":"/Sandboxer/api/InstanceSandboxer#isWrapped","content":"&lt;/&gt; InstanceSandboxer.isWrapped(a: any) → boolean Checks if a is a wrapped Instance.  ","version":null,"tagName":"h3"},{"title":"isWrappedSignal​","type":1,"pageTitle":"InstanceSandboxer","url":"/Sandboxer/api/InstanceSandboxer#isWrappedSignal","content":"&lt;/&gt; InstanceSandboxer.isWrappedSignal(a: any) → boolean Checks if a is a wrapped RBXScriptSignal. ","version":null,"tagName":"h3"}],"options":{"id":"default"}}